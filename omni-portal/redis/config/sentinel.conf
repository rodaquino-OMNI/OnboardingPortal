# Redis Sentinel Configuration
# Basic Configuration
port 26379
bind 0.0.0.0
protected-mode no

# Sentinel Configuration
sentinel monitor mymaster redis-master 6379 2
sentinel auth-pass mymaster ""
sentinel down-after-milliseconds mymaster 5000
sentinel parallel-syncs mymaster 1
sentinel failover-timeout mymaster 10000

# Notification Scripts (optional)
# sentinel notification-script mymaster /scripts/notify.sh
# sentinel client-reconfig-script mymaster /scripts/reconfig.sh

# Logging
logfile ""
loglevel notice

# Deny Scripts (security)
sentinel deny-scripts-reconfig yes

# Advanced Configuration
sentinel resolve-hostnames yes
sentinel announce-hostnames yes

# Performance Tuning
# Sentinel will check if master is down every 1 second
sentinel master-reboot-down-after-period mymaster 0

# Split-brain prevention
# Requires at least 2 sentinels to agree on failover
# This prevents split-brain scenarios in network partitions

# Additional monitoring for slaves
sentinel known-replica mymaster redis-slave-1 6379
sentinel known-replica mymaster redis-slave-2 6379

# Sentinel Persistence
dir /data

# Security - disable dangerous commands
rename-command FLUSHDB ""
rename-command FLUSHALL ""
rename-command DEBUG ""
rename-command CONFIG ""
rename-command SHUTDOWN SHUTDOWN_REDIS_SENTINEL

# Memory limits
maxmemory 64mb
maxmemory-policy allkeys-lru

# Client timeout
timeout 300

# TCP keepalive
tcp-keepalive 60