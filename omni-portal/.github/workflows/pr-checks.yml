name: Pull Request Checks

on:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  lint-and-format:
    name: Lint and Format Check
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        cache-dependency-path: ./omni-portal/frontend/package-lock.json

    - name: Install frontend dependencies
      working-directory: ./omni-portal/frontend
      run: npm ci

    - name: Check code formatting
      working-directory: ./omni-portal/frontend
      run: |
        npm run prettier:check || (echo "::error::Code formatting issues found. Run 'npm run prettier:write' to fix." && exit 1)

    - name: Run ESLint
      working-directory: ./omni-portal/frontend
      run: |
        npm run lint -- --max-warnings=0 || (echo "::warning::ESLint warnings found. Please fix them." && exit 0)

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.3'
        extensions: mbstring, xml, ctype, iconv, intl, pdo_mysql
        
    - name: Install backend dependencies
      working-directory: ./omni-portal/backend
      run: composer install --no-interaction --prefer-dist

    - name: Run PHP CodeSniffer
      working-directory: ./omni-portal/backend
      run: |
        ./vendor/bin/phpcs --standard=PSR12 app/ || (echo "::warning::PHP coding standard violations found." && exit 0)

  type-safety:
    name: Type Safety Check
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        cache-dependency-path: ./omni-portal/frontend/package-lock.json

    - name: Install dependencies
      working-directory: ./omni-portal/frontend
      run: npm ci

    - name: Run TypeScript check
      working-directory: ./omni-portal/frontend
      run: |
        npm run typecheck || (echo "::warning::TypeScript errors found. Please fix them to improve type safety." && exit 0)

  test-coverage:
    name: Test Coverage
    runs-on: ubuntu-latest
    
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: password
          MYSQL_DATABASE: omni_test
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
    - uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        cache-dependency-path: ./omni-portal/frontend/package-lock.json

    - name: Install frontend dependencies
      working-directory: ./omni-portal/frontend
      run: npm ci

    - name: Run frontend tests
      working-directory: ./omni-portal/frontend
      run: npm test -- --coverage --passWithNoTests

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.3'
        extensions: mbstring, xml, ctype, iconv, intl, pdo_mysql, dom
        coverage: xdebug

    - name: Install backend dependencies
      working-directory: ./omni-portal/backend
      run: composer install --no-interaction --prefer-dist

    - name: Run backend tests
      working-directory: ./omni-portal/backend
      env:
        DB_CONNECTION: mysql
        DB_HOST: 127.0.0.1
        DB_PORT: 3306
        DB_DATABASE: omni_test
        DB_USERNAME: root
        DB_PASSWORD: password
      run: |
        cp .env.example .env.testing
        php artisan key:generate --env=testing
        php artisan migrate --force --env=testing
        php artisan test --coverage --min=60 || echo "::warning::Test coverage is below 60%"

  pr-size:
    name: PR Size Check
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Check PR size
      uses: actions/github-script@v7
      with:
        script: |
          const { data: pr } = await github.rest.pulls.get({
            owner: context.repo.owner,
            repo: context.repo.repo,
            pull_number: context.issue.number
          });
          
          const additions = pr.additions;
          const deletions = pr.deletions;
          const totalChanges = additions + deletions;
          
          let message = `📊 **PR Size Analysis**\n\n`;
          message += `- Additions: ${additions}\n`;
          message += `- Deletions: ${deletions}\n`;
          message += `- Total changes: ${totalChanges}\n\n`;
          
          if (totalChanges > 1000) {
            message += `⚠️ **Warning**: This PR is quite large (${totalChanges} changes). Consider breaking it into smaller PRs for easier review.`;
          } else if (totalChanges > 500) {
            message += `📝 **Note**: This PR has ${totalChanges} changes. Please ensure it has a single, focused purpose.`;
          } else {
            message += `✅ PR size is reasonable for review.`;
          }
          
          github.rest.issues.createComment({
            owner: context.repo.owner,
            repo: context.repo.repo,
            issue_number: context.issue.number,
            body: message
          });