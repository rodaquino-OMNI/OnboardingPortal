# Omni Portal (Austa) Environment Configuration - SECURE VERSION
# Copy this file to .env and fill in the appropriate values
# DO NOT commit .env files to version control

# =============================================================================
# üîê SECURITY NOTICE
# =============================================================================
# This is the SECURE version of the environment configuration.
# ALL SENSITIVE VALUES (passwords, keys, tokens) are managed via Docker secrets.
# 
# NEVER SET THESE IN .env FILES:
# - Database passwords
# - Redis passwords  
# - APP_KEY
# - JWT secrets
# - API keys
# - Encryption keys
# 
# Use ./scripts/init-secrets.sh to manage secrets securely.
# =============================================================================

# =============================================================================
# APPLICATION CONFIGURATION
# =============================================================================

# Application environment (local, staging, production)
APP_ENV=production

# Application debug mode (true for development only)
APP_DEBUG=false

# Application URL (must match your domain)
APP_URL=http://localhost:8000

# Application timezone
APP_TIMEZONE=UTC

# Application locale
APP_LOCALE=en

# =============================================================================
# DATABASE CONFIGURATION
# =============================================================================

# Database connection settings
DB_CONNECTION=mysql
DB_HOST=mysql
DB_PORT=3306
DB_DATABASE=onboarding_portal
DB_USERNAME=onboarding

# DATABASE PASSWORDS ARE MANAGED VIA DOCKER SECRETS
# The following are read from secret files at runtime:
# - DB_PASSWORD (from /run/secrets/db_password)
# - MYSQL_ROOT_PASSWORD (from /run/secrets/mysql_root_password)
# - MYSQL_PASSWORD (from /run/secrets/mysql_password)

# =============================================================================
# REDIS CONFIGURATION
# =============================================================================

# Redis connection settings
REDIS_HOST=redis
REDIS_PORT=6379
REDIS_DB=0

# REDIS PASSWORD IS MANAGED VIA DOCKER SECRETS
# Read from /run/secrets/redis_password at runtime

# =============================================================================
# CACHE & SESSION CONFIGURATION
# =============================================================================

# Cache driver (redis recommended for production)
CACHE_DRIVER=redis

# Session driver (redis recommended for production)
SESSION_DRIVER=redis
SESSION_LIFETIME=120
SESSION_ENCRYPT=true
SESSION_HTTP_ONLY=true
SESSION_SAME_SITE=lax

# Queue driver
QUEUE_CONNECTION=redis

# =============================================================================
# MAIL CONFIGURATION
# =============================================================================

# Mail driver settings
MAIL_MAILER=smtp
MAIL_HOST=
MAIL_PORT=587
MAIL_USERNAME=
MAIL_ENCRYPTION=tls
MAIL_FROM_ADDRESS=
MAIL_FROM_NAME="${APP_NAME}"

# MAIL PASSWORD IS MANAGED VIA DOCKER SECRETS
# Read from /run/secrets/smtp_password at runtime (if configured)

# =============================================================================
# LOGGING CONFIGURATION
# =============================================================================

# Logging settings
LOG_CHANNEL=stack
LOG_DEPRECATIONS_CHANNEL=deprecations
LOG_LEVEL=info

# =============================================================================
# MONITORING & GRAFANA
# =============================================================================

# Grafana admin user (password via secrets)
GRAFANA_ADMIN_USER=admin

# GRAFANA PASSWORD IS MANAGED VIA DOCKER SECRETS
# Read from /run/secrets/grafana_admin_password at runtime

# =============================================================================
# SECURITY SETTINGS
# =============================================================================

# Security headers
SECURE_HEADERS_ENABLED=true

# CORS settings
CORS_ALLOWED_ORIGINS=http://localhost:3000,http://localhost:8000
CORS_ALLOWED_METHODS=GET,POST,PUT,PATCH,DELETE,OPTIONS
CORS_ALLOWED_HEADERS=Accept,Authorization,Content-Type,X-Requested-With
CORS_EXPOSED_HEADERS=
CORS_MAX_AGE=86400
CORS_SUPPORTS_CREDENTIALS=true

# Rate limiting
RATE_LIMIT_ENABLED=true
RATE_LIMIT_MAX_ATTEMPTS=60
RATE_LIMIT_DECAY_MINUTES=1

# =============================================================================
# FRONTEND CONFIGURATION
# =============================================================================

# Next.js settings
NEXT_PUBLIC_API_URL=http://localhost:8000/api
NEXT_TELEMETRY_DISABLED=1

# =============================================================================
# DOCKER & INFRASTRUCTURE
# =============================================================================

# Docker network settings
DOCKER_NETWORK_SUBNET=172.20.0.0/16

# Container hostnames (usually match service names)
MYSQL_HOST=mysql
REDIS_HOST=redis
NGINX_HOST=nginx

# =============================================================================
# MONITORING & METRICS
# =============================================================================

# Prometheus settings
PROMETHEUS_ENABLED=true
PROMETHEUS_HOST=prometheus
PROMETHEUS_PORT=9090

# MySQL Exporter settings
MYSQL_EXPORTER_ENABLED=true
MYSQL_EXPORTER_PORT=9104

# =============================================================================
# DEVELOPMENT SETTINGS (disable in production)
# =============================================================================

# Development tools (set to false in production)
TELESCOPE_ENABLED=false
DEBUGBAR_ENABLED=false
QUERY_LOG_ENABLED=false

# =============================================================================
# BACKUP SETTINGS
# =============================================================================

# Backup configuration
BACKUP_ENABLED=true
BACKUP_SCHEDULE="0 2 * * *"
BACKUP_RETENTION_DAYS=30

# =============================================================================
# HEALTH CHECKS
# =============================================================================

# Health check endpoints
HEALTH_CHECK_ENABLED=true
HEALTH_CHECK_PATH=/health

# =============================================================================
# EXTERNAL SERVICES (API keys via secrets)
# =============================================================================

# OpenAI configuration (API key via secrets)
OPENAI_MODEL=gpt-3.5-turbo
OPENAI_MAX_TOKENS=1000
OPENAI_TEMPERATURE=0.7

# OPENAI API KEY IS MANAGED VIA DOCKER SECRETS
# Read from /run/secrets/openai_api_key at runtime (if configured)

# =============================================================================
# NOTES & SECURITY REMINDERS
# =============================================================================
# 
# üîê SECRETS MANAGED VIA DOCKER:
# - austa_mysql_root_password   (MySQL root password)
# - austa_mysql_password        (MySQL user password)
# - austa_db_password          (Database connection password)
# - austa_redis_password       (Redis authentication)
# - austa_app_key             (Laravel application key)
# - austa_grafana_admin_password (Grafana admin password)
# - austa_jwt_secret          (JWT signing secret)
# - austa_session_secret      (Session encryption secret)
# - austa_openai_api_key      (OpenAI API key - optional)
# - austa_encryption_key      (Application encryption key)
# - austa_smtp_password       (SMTP password - optional)
# 
# üöÄ INITIALIZATION COMMANDS:
# 1. Initialize secrets: ./scripts/init-secrets.sh
# 2. Copy this file: cp .env.example.secure .env
# 3. Edit .env with your non-sensitive configuration
# 4. Start with secrets: docker-compose -f docker-compose.yml -f docker-compose.secrets.yml up -d
# 
# üõ°Ô∏è SECURITY BEST PRACTICES:
# - Never commit .env files to version control
# - Use different secrets for different environments
# - Rotate secrets regularly (every 90 days)
# - Monitor secret access and usage
# - Keep this configuration file updated
# - Use HTTPS in production
# - Enable security headers
# - Regular security audits
# 
# =============================================================================