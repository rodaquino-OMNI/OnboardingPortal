version: '3.8'

# Docker Secrets Management Configuration
# This file defines external secrets that must be created before running the application
# Run ./scripts/init-secrets.sh to initialize all required secrets

secrets:
  # Database secrets
  db_root_password:
    external: true
    name: omni_portal_db_root_password
  
  db_password:
    external: true  
    name: omni_portal_db_password
  
  # Redis secrets
  redis_password:
    external: true
    name: omni_portal_redis_password
  
  # Application secrets
  jwt_secret:
    external: true
    name: omni_portal_jwt_secret
  
  session_secret:
    external: true
    name: omni_portal_session_secret
  
  # API keys and external service secrets
  openai_api_key:
    external: true
    name: omni_portal_openai_api_key
  
  # Encryption keys
  encryption_key:
    external: true
    name: omni_portal_encryption_key
  
  # SMTP secrets (if email notifications are used)
  smtp_password:
    external: true
    name: omni_portal_smtp_password

services:
  # MySQL Database with secrets
  mysql:
    image: mysql:8.0
    container_name: omni-portal-mysql
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: ${DB_NAME:-omni_portal}
      MYSQL_USER: ${DB_USER:-austa}
      MYSQL_ROOT_PASSWORD_FILE: /run/secrets/db_root_password
      MYSQL_PASSWORD_FILE: /run/secrets/db_password
    secrets:
      - db_root_password
      - db_password
    volumes:
      - mysql_data:/var/lib/mysql
      - ./database/init:/docker-entrypoint-initdb.d:ro
    networks:
      - omni-portal-network
    ports:
      - "${DB_PORT:-3306}:3306"
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10
      interval: 30s
      start_period: 40s

  # Redis with password from secrets
  redis:
    image: redis:7-alpine
    container_name: omni-portal-redis
    restart: unless-stopped
    command: >
      sh -c "
        redis-server --requirepass $$(cat /run/secrets/redis_password)
      "
    secrets:
      - redis_password
    volumes:
      - redis_data:/data
    networks:
      - omni-portal-network
    ports:
      - "${REDIS_PORT:-6379}:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "--no-auth-warning", "-a", "$(cat /run/secrets/redis_password)", "ping"]
      timeout: 10s
      retries: 5
      interval: 30s
      start_period: 20s

  # Frontend application with secrets
  frontend:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        NODE_ENV: ${NODE_ENV:-production}
    container_name: omni-portal-frontend
    restart: unless-stopped
    environment:
      NODE_ENV: ${NODE_ENV:-production}
      PORT: ${PORT:-3000}
      DB_HOST: mysql
      DB_PORT: 3306
      DB_NAME: ${DB_NAME:-omni_portal}
      DB_USER: ${DB_USER:-austa}
      REDIS_HOST: redis
      REDIS_PORT: 6379
      # Secrets will be read from files
      JWT_SECRET_FILE: /run/secrets/jwt_secret
      SESSION_SECRET_FILE: /run/secrets/session_secret
      OPENAI_API_KEY_FILE: /run/secrets/openai_api_key
      ENCRYPTION_KEY_FILE: /run/secrets/encryption_key
    secrets:
      - jwt_secret
      - session_secret
      - openai_api_key
      - encryption_key
      - db_password
      - redis_password
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - omni-portal-network
    ports:
      - "${PORT:-3000}:3000"
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000/health"]
      timeout: 10s
      retries: 3
      interval: 30s
      start_period: 40s

volumes:
  mysql_data:
    driver: local
  redis_data:
    driver: local

networks:
  omni-portal-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16