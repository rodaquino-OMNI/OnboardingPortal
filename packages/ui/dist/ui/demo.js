import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { useState } from 'react';
import { Button, Card, CardHeader, CardTitle, CardDescription, CardContent, CardFooter, ProgressCard, Input, Label, Badge, Progress, CircularProgress, Alert, AlertTitle, AlertDescription, Modal, ModalTrigger, ModalContent, ModalHeader, ModalTitle, ModalDescription, ModalFooter, Skeleton } from './index';
export function UIComponentsDemo() {
    const [progress, setProgress] = useState(65);
    const [modalOpen, setModalOpen] = useState(false);
    return (_jsxs("div", { className: "container mx-auto p-8 space-y-8", children: [_jsx("h1", { className: "text-3xl font-bold text-gray-900 mb-8", children: "Healthcare Portal UI Components" }), _jsxs("section", { className: "space-y-4", children: [_jsx("h2", { className: "text-2xl font-semibold text-gray-800", children: "Buttons" }), _jsxs("div", { className: "flex flex-wrap gap-4", children: [_jsx(Button, { variant: "primary", children: "Primary Button" }), _jsx(Button, { variant: "secondary", children: "Secondary Button" }), _jsx(Button, { variant: "achievement", children: "Achievement" }), _jsx(Button, { variant: "outline", children: "Outline" }), _jsx(Button, { variant: "ghost", children: "Ghost" }), _jsx(Button, { variant: "destructive", children: "Destructive" }), _jsx(Button, { size: "sm", children: "Small" }), _jsx(Button, { size: "lg", children: "Large" }), _jsx(Button, { disabled: true, children: "Disabled" })] })] }), _jsxs("section", { className: "space-y-4", children: [_jsx("h2", { className: "text-2xl font-semibold text-gray-800", children: "Cards" }), _jsxs("div", { className: "grid grid-cols-1 md:grid-cols-2 gap-4", children: [_jsxs(Card, { children: [_jsxs(CardHeader, { children: [_jsx(CardTitle, { children: "Standard Card" }), _jsx(CardDescription, { children: "This is a standard card component" })] }), _jsx(CardContent, { children: _jsx("p", { children: "Card content goes here. It can contain any React components." }) }), _jsx(CardFooter, { children: _jsx(Button, { size: "sm", children: "Action" }) })] }), _jsxs(ProgressCard, { progress: progress, children: [_jsxs(CardHeader, { children: [_jsx(CardTitle, { children: "Progress Card" }), _jsx(CardDescription, { children: "Shows progress at the bottom" })] }), _jsxs(CardContent, { children: [_jsx("p", { children: "This card displays a progress indicator." }), _jsx(Button, { onClick: () => setProgress(prev => prev >= 100 ? 0 : prev + 10), className: "mt-2", size: "sm", children: "Increase Progress" })] })] })] })] }), _jsxs("section", { className: "space-y-4", children: [_jsx("h2", { className: "text-2xl font-semibold text-gray-800", children: "Form Inputs" }), _jsxs("div", { className: "grid grid-cols-1 md:grid-cols-2 gap-4", children: [_jsxs("div", { className: "space-y-2", children: [_jsx(Label, { htmlFor: "text-input", required: true, children: "Text Input" }), _jsx(Input, { id: "text-input", placeholder: "Enter text..." })] }), _jsxs("div", { className: "space-y-2", children: [_jsx(Label, { htmlFor: "cpf-input", children: "CPF Input" }), _jsx(Input, { id: "cpf-input", mask: "cpf", placeholder: "000.000.000-00" })] }), _jsxs("div", { className: "space-y-2", children: [_jsx(Label, { htmlFor: "phone-input", children: "Phone Input" }), _jsx(Input, { id: "phone-input", mask: "phone", placeholder: "(00) 00000-0000" })] }), _jsxs("div", { className: "space-y-2", children: [_jsx(Label, { htmlFor: "date-input", children: "Date Input" }), _jsx(Input, { id: "date-input", mask: "date", placeholder: "00/00/0000" })] }), _jsxs("div", { className: "space-y-2", children: [_jsx(Label, { htmlFor: "cep-input", children: "CEP Input" }), _jsx(Input, { id: "cep-input", mask: "cep", placeholder: "00000-000" })] }), _jsxs("div", { className: "space-y-2", children: [_jsx(Label, { htmlFor: "disabled-input", children: "Disabled Input" }), _jsx(Input, { id: "disabled-input", disabled: true, value: "Disabled" })] })] })] }), _jsxs("section", { className: "space-y-4", children: [_jsx("h2", { className: "text-2xl font-semibold text-gray-800", children: "Badges" }), _jsxs("div", { className: "flex flex-wrap gap-2", children: [_jsx(Badge, { children: "Default" }), _jsx(Badge, { variant: "secondary", children: "Secondary" }), _jsx(Badge, { variant: "achievement", children: "Achievement" }), _jsx(Badge, { variant: "outline", children: "Outline" }), _jsx(Badge, { variant: "success", children: "Success" }), _jsx(Badge, { variant: "warning", children: "Warning" }), _jsx(Badge, { variant: "error", children: "Error" })] })] }), _jsxs("section", { className: "space-y-4", children: [_jsx("h2", { className: "text-2xl font-semibold text-gray-800", children: "Progress Indicators" }), _jsxs("div", { className: "space-y-4", children: [_jsxs("div", { children: [_jsx("h3", { className: "text-lg font-medium mb-2", children: "Linear Progress" }), _jsx(Progress, { value: 75, showLabel: true })] }), _jsxs("div", { children: [_jsx("h3", { className: "text-lg font-medium mb-2", children: "Circular Progress" }), _jsxs("div", { className: "flex gap-4", children: [_jsx(CircularProgress, { value: 25, showLabel: true }), _jsx(CircularProgress, { value: 50, showLabel: true }), _jsx(CircularProgress, { value: 75, showLabel: true }), _jsx(CircularProgress, { value: 100, showLabel: true, size: 80, strokeWidth: 6 })] })] })] })] }), _jsxs("section", { className: "space-y-4", children: [_jsx("h2", { className: "text-2xl font-semibold text-gray-800", children: "Alerts" }), _jsxs("div", { className: "space-y-2", children: [_jsxs(Alert, { children: [_jsx(AlertTitle, { children: "Default Alert" }), _jsx(AlertDescription, { children: "This is a default alert message." })] }), _jsxs(Alert, { variant: "success", children: [_jsx(AlertTitle, { children: "Success!" }), _jsx(AlertDescription, { children: "Your profile has been updated successfully." })] }), _jsxs(Alert, { variant: "error", children: [_jsx(AlertTitle, { children: "Error" }), _jsx(AlertDescription, { children: "There was a problem processing your request." })] }), _jsxs(Alert, { variant: "warning", children: [_jsx(AlertTitle, { children: "Warning" }), _jsx(AlertDescription, { children: "Your session will expire in 5 minutes." })] }), _jsxs(Alert, { variant: "info", children: [_jsx(AlertTitle, { children: "Information" }), _jsx(AlertDescription, { children: "New features have been added to the portal." })] })] })] }), _jsxs("section", { className: "space-y-4", children: [_jsx("h2", { className: "text-2xl font-semibold text-gray-800", children: "Modal" }), _jsxs(Modal, { open: modalOpen, onOpenChange: setModalOpen, children: [_jsx(ModalTrigger, { asChild: true, children: _jsx(Button, { children: "Open Modal" }) }), _jsxs(ModalContent, { children: [_jsxs(ModalHeader, { children: [_jsx(ModalTitle, { children: "Modal Title" }), _jsx(ModalDescription, { children: "This is an accessible modal dialog component." })] }), _jsx("div", { className: "py-4", children: _jsx("p", { children: "Modal content can include forms, information, or any other React components." }) }), _jsxs(ModalFooter, { children: [_jsx(Button, { variant: "outline", onClick: () => setModalOpen(false), children: "Cancel" }), _jsx(Button, { onClick: () => setModalOpen(false), children: "Confirm" })] })] })] })] }), _jsxs("section", { className: "space-y-4", children: [_jsx("h2", { className: "text-2xl font-semibold text-gray-800", children: "Loading Skeletons" }), _jsxs(Card, { children: [_jsxs(CardHeader, { children: [_jsx(Skeleton, { className: "h-6 w-[200px]" }), _jsx(Skeleton, { className: "h-4 w-[300px]" })] }), _jsxs(CardContent, { className: "space-y-2", children: [_jsx(Skeleton, { className: "h-4 w-full" }), _jsx(Skeleton, { className: "h-4 w-full" }), _jsx(Skeleton, { className: "h-4 w-3/4" })] }), _jsx(CardFooter, { children: _jsx(Skeleton, { className: "h-10 w-[100px]" }) })] })] })] }));
}
