name: CI/CD Pipeline

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

env:
  NODE_VERSION: '18.x'

jobs:
  lint-and-typecheck:
    name: Lint and Type Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: omni-portal/frontend/package-lock.json
      
      - name: Install dependencies
        working-directory: omni-portal/frontend
        run: npm ci
      
      - name: Run ESLint
        working-directory: omni-portal/frontend
        run: npm run lint
      
      - name: Run TypeScript type checking
        working-directory: omni-portal/frontend
        run: npm run type-check
      
      - name: Check formatting
        working-directory: omni-portal/frontend
        run: npm run format:check

  unit-tests:
    name: Unit Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: omni-portal/frontend/package-lock.json
      
      - name: Install dependencies
        working-directory: omni-portal/frontend
        run: npm ci
      
      - name: Run unit tests
        working-directory: omni-portal/frontend
        run: npm run test:ci
      
      - name: Upload coverage reports
        uses: codecov/codecov-action@v4
        with:
          directory: ./omni-portal/frontend/coverage
          flags: unittests
          name: codecov-umbrella

  e2e-tests:
    name: E2E Tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        browser: [chromium, firefox, webkit]
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: omni-portal/frontend/package-lock.json
      
      - name: Install dependencies
        working-directory: omni-portal/frontend
        run: npm ci
      
      - name: Install Playwright browsers
        working-directory: omni-portal/frontend
        run: npx playwright install --with-deps ${{ matrix.browser }}
      
      - name: Build application
        working-directory: omni-portal/frontend
        run: npm run build
      
      - name: Run E2E tests
        working-directory: omni-portal/frontend
        run: npx playwright test --project=${{ matrix.browser }}
      
      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-results-${{ matrix.browser }}
          path: omni-portal/frontend/test-results/

  accessibility-tests:
    name: Accessibility Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: omni-portal/frontend/package-lock.json
      
      - name: Install dependencies
        working-directory: omni-portal/frontend
        run: npm ci
      
      - name: Build application
        working-directory: omni-portal/frontend
        run: npm run build
      
      - name: Run accessibility tests
        working-directory: omni-portal/frontend
        run: npm run test:a11y

  lighthouse:
    name: Lighthouse Performance Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: omni-portal/frontend/package-lock.json
      
      - name: Install dependencies
        working-directory: omni-portal/frontend
        run: npm ci
      
      - name: Build application
        working-directory: omni-portal/frontend
        run: npm run build
      
      - name: Run Lighthouse CI
        uses: treosh/lighthouse-ci-action@v11
        with:
          configPath: './omni-portal/frontend/lighthouserc.js'
          uploadArtifacts: true
          temporaryPublicStorage: true

  build:
    name: Build Application
    runs-on: ubuntu-latest
    needs: [lint-and-typecheck, unit-tests]
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: omni-portal/frontend/package-lock.json
      
      - name: Install dependencies
        working-directory: omni-portal/frontend
        run: npm ci
      
      - name: Build application
        working-directory: omni-portal/frontend
        run: npm run build
      
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: omni-portal/frontend/.next/
          retention-days: 7

  deploy-preview:
    name: Deploy Preview
    runs-on: ubuntu-latest
    needs: [build, e2e-tests, accessibility-tests]
    if: github.event_name == 'pull_request'
    steps:
      - uses: actions/checkout@v4
      
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-artifacts
          path: omni-portal/frontend/.next/
      
      - name: Deploy to Vercel Preview
        uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          working-directory: ./omni-portal/frontend
          github-comment: true